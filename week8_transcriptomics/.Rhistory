knitr::opts_knit$set(root.dir = normalizePath("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data"))
# install, only if needed, and load packages (SummarizedExperiment and TCGAbiolinks)
library(TCGAbiolinks)
library(SummarizedExperiment)
knitr::opts_knit$set(root.dir = normalizePath("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data"))
# install "DESeq2" using BiocManager::install()
BiocManager::install("DESeq2")
library(DESeq2)
# load DESEq2
rna_query <- GDCquery(project ="TCGA-BRCA",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type = "STAR - Counts")
#GDCdownload(rna_query)
rna_se <- GDCprepare(rna_query)
# write code here
head(rna_se)
str(rna_se)
view(rna_se)
View(rna_se)
# write code here
dim(rna_se@colData)
dim(rna_se@rowRanges)
# write code here
dim(rna_se@colData)
dim(rna_se@rowRanges)
dim(rna_se@unstranded)
# write code here
dim(rna_se@colData)
dim(rna_se@rowRanges)
dim(rna_se@assays@data$unstranded)
# colData:
rownames(rna_se@colData)
colnames(rna_se@colData)
# rowRanges:
str(rna_se@rowRanges)
# what are the rows... use your logic
# for unstranded, don't call anything, just use your logic from exercise 1.2 and and think it through!
# write code here
summary(rna_se@colData$age_at_index)
# write code here
dim(rna_se@colData)
dim(rna_se@rowRanges@elementMetadata)
dim(rna_se@assays@data$unstranded)
# write code here
rna_se@colData[1:15,'age_at_index']
rna_clinical <- rna_se@colData
rna_clinical <- as.data.frame(rna_clinical)
treatments_mask <- !colnames(rna_clinical) %in% c('treatments','primary_type','disease_type')
rna_clinical <- rna_clinical[,treatments_mask]
treatments_mask <- !colnames(rna_clinical) %in% c('treatments','primary_site','disease_type')
rna_clinical <- rna_clinical[,treatments_mask]
write.csv(rna_clinical, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_clincial_data.csv", row.names = TRUE)
# write code here
head(rna_se@rowRanges@elementMetadata
# write code here
head(rna_se@rowRanges@elementMetadata)
rna_genes <- rna_se@rowRanges@elementMetadata
rna_genes <- as.data.frame(rna_genes)
write.csv(rna_genes, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_gene_data.csv", row.names = FALSE)
# access the assays here
rna_se@assays@data$unstranded
rna_counts <- rna_se@assays@data$unstranded
# write code here
rna_counts[1:15,1:5]
write.csv(rna_counts, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv", row.names = TRUE)
# write code here
rownames(rna_clinical)
colnames(rna_clinical)
# write code here
rna_clinical$age_category <- ifelse(rna_clinical$age_at_index>58,'Old','Young')
# Hint: if you're really stuck finding the columns/determining which to use, go to the bottom of the "Cleaning up your data frames" section for the answers. Only do this once you've given it a good shot on your own!
# write code here
rownames(rna_genes)
colnames(rna_genes)
# write code here
row.names(rna_genes)<-rna_genes$gene_id
# write code here
rownames(rna_counts)
colnames(rna_counts)
# write code here
colnames(rna_counts)<-rna_clinical$barcode
rownames(rna_counts)<-rna_genes$gene_id
# write code here
tissue_mask<-ifelse(rna_clinical$definition=='Solid Tissue Normal',F,T)
rna_clinical<-rna_clinical[tissue_mask,]
# write code here
rna_counts[,tissue_mask]
# write code here
rna_counts<-rna_counts[,tissue_mask]
View(rna_counts)
View(rna_counts)
# fill in the nested ifelse to capture TRUE/FALSE values for whether a patient survived 5 years according to their days_to_death (NOTE: the first ifelse condition changes the NAs from next to true NA values so we can use is.na() later on)
five_yr_death <- ifelse(rna_clinical$days_to_death == "NA", NA, ifelse(rna_clinical$days_to_death>365.25*5,T,F))
# use boolean data from days_to_last_followup when five_yr_death is NA
five_yr_death_and_followup <- ifelse(is.na(five_yr_death), ifelse(rna_clinical$days_to_last_follow_up>365.25*5,T,F), five_yr_death)
# create your column from your finalized boolean vector (there should be only T/F, no NAs)
rna_clinical$five_year_surv <- five_yr_death_and_followup
# write code here
c('TP53','MUC16') %in% rna_genes$gene_name
# write code here
geneTP53_mask <- rna_genes$gene_name=='TP53' # create mask based on the gene name (your mask should be true when the name is 'geneA' and false for any other gene name)
geneMUC16_mask <- rna_genes$gene_name=='MUC16'
# write code here
TP53_mask <- rna_genes$gene_name=='TP53' # create mask based on the gene name (your mask should be true when the name is 'geneA' and false for any other gene name)
MUC16_mask <- rna_genes$gene_name=='MUC16'
geneA_ensembl <- rna_genes$gene_id[TP53_mask]# think about which column we should apply out mask to
geneB_ensembl <- rna_genes$gene_id[MUC16_mask]
TP53_ensembl <- rna_genes$gene_id[TP53_mask]# think about which column we should apply out mask to
MUC16_ensembl <- rna_genes$gene_id[MUC16_mask]
TP53_counts <- rna_counts[TP53_ensembl,]
MUC16_counts <- rna_counts[MUC16_ensembl,]
# write code here
summary(TP53_counts)
SUMMARY(MUC16_counts)
# write code here
summary(TP53_counts)
summary(MUC16_counts)
par(mar=c(1,1,1,1)) # this changes your margins so the plot will appear in the window correctly
plot(TP53_counts,
MUC16_counts,
xlab = "TP53 counts",
ylab = "MUC16 counts",
main = "TP53 counts vs MUC16 counts"
)
geneAB_counts <- data.frame(TP53_counts,MUC16_counts) # create data frame with geneA_counts and geneB_counts
par(mar=c(1,1,1,1))
boxplot(geneAB_counts,
xlab = "x axis label",
ylab = "y axis label")
geneAB_counts <- data.frame(TP53_counts,MUC16_counts) # create data frame with geneA_counts and geneB_counts
par(mar=c(1,1,1,1))
boxplot(geneAB_counts,
xlab = "Gene",
ylab = "Counts")
par(mar=c(1,1,1,1))
boxplot(MUC16_counts ~ rna_clinical$age_category, # think about what data (gene counts or the 5 yr survival column) should be on the x vs y axes
xlab = "Age Category",
ylab = "MUC16 Counts")
dev.off()
par(mar=c(1,1,1,1))
boxplot(MUC16_Counts ~ rna_clinical$age_category, # think about what data (gene counts or the 5 yr survival column) should be on the x vs y axes
xlab = "Age Category",
ylab = "MUC16 Counts")
par(mar=c(1,1,1,1))
boxplot(MUC16_counts ~ rna_clinical$age_category, # think about what data (gene counts or the 5 yr survival column) should be on the x vs y axes
xlab = "Age Category",
ylab = "MUC16 Counts")
dev.off()
par(mar=c(1,1,1,1))
boxplot(MUC16_counts ~ rna_clinical$age_category,
xlab = "Age Category",
ylab = "MUC16 Counts")
dev.off()
par(mar=c(1,1,1,1))
boxplot(MUC16_counts ~ rna_clinical$age_category,
xlab = "Age Category",
ylab = "MUC16 Counts")
dev.off()
par(mar=c(1,1,1,1))
boxplot(MUC16_counts ~ rna_clinical$age_category,
xlab = "Age Category",
ylab = "MUC16 Counts")
MKI67_mask<-rna_genes$gene_name=="MKI67"
PTGS2_mask<-rna_genes$gene_name=="PTGS2"
MKI67_ensembl<-rna_genes$gene_id[MKI67_mask]
PTGS2_ensembl<-rna_genes$gene_id[PTGS2_mask]
mk167_counts <- rna_counts[MKI67_ensembl,]
PTGS2_counts <- rna_counts[MKI67_ensembl,]
MKI67_mask<-rna_genes$gene_name=="MKI67"
PTGS2_mask<-rna_genes$gene_name=="PTGS2"
MKI67_ensembl<-rna_genes$gene_id[MKI67_mask]
PTGS2_ensembl<-rna_genes$gene_id[PTGS2_mask]
MKI67_counts <- rna_counts[MKI67_ensembl,]
PTGS2_counts <- rna_counts[MKI67_ensembl,]
# fill in with your 4 individual gene count lists and their names
geneABCD_counts <- data.frame(TP53_counts,MUC16_counts,MKI67_counts,PTGS2_counts)
colnames(geneABCD_counts) <- c('TP53','MUC16','MKI67','PTGS2')
# the following three lines set up a clustering color scheme for our plot
# choose a column from rna_clinical to cluster based on (ex: age_category, five_yr_surv, AJCC staging, etc.)
cols <- character(nrow(rna_clinical))
cols[rna_clinical$gender == "female"] <- "blue" # fill in column and value for as many unique values are in your column (ex: 2 for age_category, "young"/"old")
cols[rna_clinical$gender == "male"] <- "red"
# run this line to create your plot!
pairs(geneABCD_counts, col = cols, lower.panel=NULL)
# fill in with your 4 individual gene count lists and their names
geneABCD_counts <- data.frame(TP53_counts,MUC16_counts,MKI67_counts,PTGS2_counts)
colnames(geneABCD_counts) <- c('TP53','MUC16','MKI67','PTGS2')
# the following three lines set up a clustering color scheme for our plot
# choose a column from rna_clinical to cluster based on (ex: age_category, five_yr_surv, AJCC staging, etc.)
cols <- character(nrow(rna_clinical))
cols[rna_clinical$gender == "female"] <- "blue" # fill in column and value for as many unique values are in your column (ex: 2 for age_category, "young"/"old")
cols[rna_clinical$gender == "male"] <- "red"
cols[228]<-NA
# run this line to create your plot!
pairs(geneABCD_counts, col = cols, lower.panel=NULL)
# save files here
write.csv(rna_clinical, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_clincial_data.csv", row.names = TRUE)
write.csv(rna_counts, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv", row.names = TRUE)
write.csv(rna_genes, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_gene_data.csv", row.names = TRUE)
# Read in csv files
rna_counts <- "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv"
rna_genes <- "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_gene_data.csv"
rna_clinical <- "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_clincial_data.csv"
# Read in csv files
rna_counts <- read.csv("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv")
rna_genes <- read.csv("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_gene_data.csv")
rna_clinical <- read.csv("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_clincial_data.csv")
View(rna_genes)
View(rna_counts)
View(rna_clinical)
?factor
# write code here
rna_clinical$age_category <- factor()
View(rna_clinical)
head(rna_clinical$age_category)
?factor
# write code here
rna_clinical$age_category <- factor(rna_clinical$age_category)
head(rna_clinical$age_category)
View(rna_clinical)
# write code here
rna_clinical$ajcc_pathologic_stage <- factor(rna_clinical$ajcc_pathologic_stage)
rna_clinical$definition <- factor(rna_clinical$definition)
head(rna_clinical$ajcc_pathologic_stage)
head(rna_clinical$definition)
# write code here
sum(is.na(rna_clinical$age_category))
sum(is.na(rna_clinical$ajcc_pathologic_stage))
sum(is.na(rna_clinical$definition))
na_mask <-ifelse(is.na(rna_clinical$age_category),ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
na_mask <-ifelse(is.na(rna_clinical$age_category),F,ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
rna_clinical <-  # think about where the mask goes in the df[rows, columns] notation
rna_counts <-  # does the mask go in the same or opposite location?
na_mask <-ifelse(is.na(rna_clinical$age_category),F,ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
rna_clinical <- rna_clinical[na_mask,]
sum(is.na(rna_clinical$age_category))
sum(is.na(rna_clinical$ajcc_pathologic_stage))
sum(is.na(rna_clinical$definition))
na_mask <-ifelse(is.na(rna_clinical$age_category),F,ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
rna_clinical <- rna_clinical[na_mask,]
rna_counts <- rna_counts[,na_mask]
row_sums <-rowSums(rna_counts)
View(rna_counts)
row_sums <-rowSums(rna_counts)
View(rna_counts)
rna_counts <- read.table("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv",sep = ',',row.names = 1, header = TRUE)
rna_counts <- read.table("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_count_data.csv",sep = ',',row.names = 1, header = TRUE)
row_sums <-rowSums(rna_counts)
View(rna_genes)
low_counts_mask <- ifelse(row_sums<10,F,T)
# rewrite the rna_counts df, subsetting for only genes with >= 10 total counts
rna_counts <- rna_counts[low_counts_mask,]
#update rna_genes with the low_counts_mas
rna_genes <-rna_genes[low_counts_mask,]
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~rna_clinical$ajcc_pathologic_stage + rna_clinical$definition + rna_clinical$age_category)
na_mask <-ifelse(is.na(rna_clinical$age_category),F,ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
rna_clinical <- rna_clinical[na_mask,]
rna_counts <- rna_counts[,na_mask]
rna_clinical <- read.csv("/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/brca_rna_clincial_data.csv")
na_mask <-ifelse(is.na(rna_clinical$age_category),F,ifelse(is.na(rna_clinical$ajcc_pathologic_stage),F,T))
rna_clinical <- rna_clinical[na_mask,]
rna_counts <- rna_counts[,na_mask]
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~rna_clinical$ajcc_pathologic_stage + rna_clinical$definition + rna_clinical$age_category)
?factor
# write code here
rna_clinical$age_category <- factor(rna_clinical$age_category)
head(rna_clinical$age_category)
# write code here
rna_clinical$ajcc_pathologic_stage <- factor(rna_clinical$ajcc_pathologic_stage)
rna_clinical$definition <- factor(rna_clinical$definition)
head(rna_clinical$ajcc_pathologic_stage)
head(rna_clinical$definition)
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~rna_clinical$ajcc_pathologic_stage + rna_clinical$definition + rna_clinical$age_category)
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~rna_clinical$ajcc_pathologic_stage + rna_clinical$definition + rna_clinical$age_category)
?DESeqDataSetFromMatrix
dds <- DESeqDataSetFromMatrix(countData = rna_counts,
colData = rna_clinical,
design = ~ajcc_pathologic_stage + definition + age_category)
?DESeq
dds_obj <- DESeq(dds) # note: this will likely take a long time (ie 45 minutes to 2 hours)
?resultsNames
resultsNames(dds_obj)  # see what comparisons got run
# get the young vs. old comparison
?results
results <- results(dds_obj, format = "DataFrame", contrast = c("age_category", "Young", "Old")) # this is case sensitive so be careful to match it with your age_category factors closely!
# write code here
head(results)
View(results)
dim(results)
# write code here, replace column#'s
genename_mask<-ifelse(rna_genes$gene_id %in% results@rownames,T,F)
rna_genes<-rna_genes[genename_mask,]
results <- data.frame(rna_genes$gene_name,rna_genes$gene_id,results$log2FoldChange,results$pvalue,results$padj,-log10(results$padj))
# HINT: to get the gene names, you will need to create a boolean mask that is T when rna_genes$gene_id %in% results@rownames, and F if otherwise, then use this mask to subset rna_genes$gene_names for only the names that are in the results df
colnames(results) <- c("gene_name","gene_id","log2foldchange","pvalue","padj","-log10padj") ## FIX
sig_mask<-ifelse(results$pvalue<0.05,T,F)
sig_results <- results[sig_mask,]
up_reg_results <- order(results$log2foldchange,decreasing = TRUE)
up_reg_results <- results(order(results$log2foldchange,decreasing = TRUE))
up_reg_results <- results[order(results$log2foldchange,decreasing = TRUE),]
View(up_reg_results)
# write code here
log2_mask<-ifelse(up_reg_results$log2foldchange>1,T,F)
up_reg_results <- up_reg_results[log2_mask,]
View(up_reg_results)
# write code here
down_reg_results <- results[order(results$log2foldchange,decreasing = FALSE),]
View(down_reg_results)
# write code here
down_reg_results <- results[order(results$log2foldchange,decreasing = FALSE),]
log2_mask_2<-ifelse(down_reg_results$log2foldchange<-1,T,F)
down_reg_results <- down_reg_results[log2_mask_2,]
View(down_reg_results)
# write code here
down_reg_results <- results[order(results$log2foldchange,decreasing = FALSE),]
View(dds_obj)
# write code here
down_reg_results <- results[order(results$log2foldchange,decreasing = FALSE),]
log2_mask_2<-ifelse(down_reg_results$log2foldchange<-1,T,F)
down_reg_results<-down_reg_results[log2_mask_2,]
# write code here
down_reg_results <- results[order(results$log2foldchange,decreasing = FALSE),]
log2_mask_2<-ifelse(down_reg_results$log2foldchange<(-1),T,F)
down_reg_results<-down_reg_results[log2_mask_2,]
# write code here
head(up_reg_results)
head(down_reg_results)
# write code here
write.csv(up_reg_results, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/up_reg_results.csv", row.names = TRUE)
write.csv(down_reg_results, "/Users/aliceeeee/Desktop/Spring23/QBIO490/qbio_490_alice/analysis_data/down_reg_results.csv", row.names = TRUE)
# install (using BiocManager) and load "EnhancedVolcano"
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
# install (using BiocManager) and load "EnhancedVolcano"
BiocManager::install("EnhancedVolcano")
load(EnhancedVolcano)
library(EnhancedVolcano)
# install (using BiocManager) and load "EnhancedVolcano"
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
library(ggplot2)
# install (using BiocManager) and load "EnhancedVolcano"
BiocManager::install("EnhancedVolcano")
library(EnhancedVolcano)
